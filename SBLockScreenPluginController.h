/**
 * This header is generated by class-dump-z 0.2-0.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "SpringBoard-Structs.h"
#import "_UISettingsKeyObserver.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class SBLockScreenPluginTransitionFactory, UIWindow, SBLockScreenTestPluginSettings, SBLockScreenPluginLoader, SBLockScreenPlugin, SBLockScreenViewController, NSMutableDictionary;
@protocol SBLockScreenPluginControllerDelegate;

__attribute__((visibility("hidden")))
@interface SBLockScreenPluginController : XXUnknownSuperclass <_UISettingsKeyObserver> {
	SBLockScreenPluginLoader* _pluginLoader;
	NSMutableDictionary* _plugins;
	SBLockScreenPlugin* _activePlugin;
	SBLockScreenPlugin* _displayedPlugin;
	SBLockScreenPluginTransitionFactory* _transitionFactory;
	id<SBLockScreenPluginControllerDelegate> _delegate;
	SBLockScreenViewController* _lockScreenViewController;
	BOOL _pluginControllerReceivedViewWillDisappear;
	BOOL _pluginControllerReceivedViewDidDisappear;
	UIWindow* _previousWindow;
	SBLockScreenTestPluginSettings* _testSettings;
	BOOL _lockScreenHasNotifications;
	BOOL _allowDisplayOfPlugins;
	float _fadeDuration;
}
@property(readonly, retain) SBLockScreenPlugin* activePlugin;
@property(assign, nonatomic) BOOL allowDisplayOfPlugins;
@property(assign, nonatomic) id<SBLockScreenPluginControllerDelegate> delegate;
@property(readonly, retain) SBLockScreenPlugin* displayedPlugin;
@property(assign) float fadeDuration;
@property(assign, nonatomic) BOOL lockScreenHasNotifications;
@property(assign, nonatomic) SBLockScreenViewController* lockScreenViewController;
@property(retain, nonatomic) SBLockScreenPluginLoader* pluginLoader;
- (id)initWithLockScreenViewController:(id)lockScreenViewController;
- (void)_addObservers;
- (void)_disablePluginsPassingTest:(id)test withReason:(id)reason;
- (void)_handleApplicationExit:(id)exit;
- (void)_handlePluginDisable:(id)disable;
- (void)_handleUIRelock;
- (id)_highestPriorityPluginIgnoringViewDisplay:(BOOL)display;
- (void)_loadLockScreenPluginWithName:(id)name activationContext:(id)context;
- (void)_lockScreenDidMoveToWindow;
- (id)_lockScreenView;
- (void)_lockScreenWillMoveToWindow;
- (void)_notifyDisplayedPluginAddedToWindow;
- (void)_notifyDisplayedPluginRemovedFromWindow;
- (id)_pluginForName:(id)name controller:(id)controller;
- (BOOL)_pluginHidesNotificationList:(id)list;
- (id)_pluginView;
- (void)_refreshLockScreenPlugin;
- (void)_removeActivePlugin;
- (void)_removeDisplayedPlugin;
- (void)_setActivePlugin:(id)plugin;
- (void)_setDisplayedPlugin:(id)plugin;
- (void)_setEffectivePresentationStyleForDisplayedPluginIfNecessary;
- (id)_transitionContextWithOldPlugin:(id)oldPlugin newPlugin:(id)plugin;
- (void)_transitionFromExclusionaryPluginToNotificationList;
- (void)_transitionFromNotificationListToExclusionaryPlugin;
- (void)_updateCallPluginPresentationStyle;
- (void)_updateNotificationListForNewlyActivatedPlugin;
- (id)activePluginBundleName;
- (BOOL)activePluginHidesNotificationList;
- (void)dealloc;
- (CGRect)defaultContentRegionForPluginController:(id)pluginController withOrientation:(int)orientation;
- (void)disableLockScreenBundleWithName:(id)name deactivationContext:(id)context;
- (void)enableLockScreenBundleWithName:(id)name activationContext:(id)context;
- (BOOL)handleHeadsetButtonPressed:(BOOL)pressed;
- (BOOL)handleLockButtonPressed;
- (BOOL)handleMenuButtonDoubleTap;
- (BOOL)handleMenuButtonHeld;
- (BOOL)handleMenuButtonTap;
- (void)handleUIUnlock;
- (BOOL)handleVolumeDownButtonPressed;
- (BOOL)handleVolumeUpButtonPressed;
- (BOOL)isPhonePluginActive;
- (BOOL)isPhonePluginVisible;
- (BOOL)isPluginVisible;
- (BOOL)pluginControllerShouldAnimateOthersResumption;
- (void)reset;
- (BOOL)sendEventToPlugin:(id)plugin;
- (void)settings:(id)settings changedValueForKey:(id)key;
- (BOOL)wantsMenuButtonHeldEvent;
@end

